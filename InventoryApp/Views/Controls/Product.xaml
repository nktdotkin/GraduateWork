<UserControl x:Class="InventoryApp.Views.Controls.Product"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:InventoryApp.ViewModels.Product"
             xmlns:browser="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
             xmlns:service="clr-namespace:InventoryApp.Service"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:ProductViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Button ToolTip="Search" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="70" Height="70" Margin="30,60,0,0">
            <materialDesign:PackIcon Kind="Search" Height="30" Width="30" Foreground="Black" />
        </Button>
        <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Width="200" materialDesign:HintAssist.Hint="Search" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  MaxLength="50" Margin="90,70,0,0" FontFamily="Arial" Foreground="Black" TextAlignment="Justify" FontSize="18"/>
        <Grid Margin="0,180,0,0">
            <DataGrid Width="900" HorizontalAlignment="Left" ColumnWidth="Auto" Style="{StaticResource DataGridStyle}" ItemsSource="{Binding ProductModels, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem}">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=Name}" Header="Name"/>
                    <DataGridTextColumn Binding="{Binding Path=Description}" Header="Description"/>
                    <DataGridTextColumn Binding="{Binding Path=ExpirationDateDays, StringFormat=dd-MM-yyyy}" Header="Expiration date"/>
                    <DataGridTextColumn Binding="{Binding Path=Amount}" Header="Amount"/>
                    <DataGridTextColumn Binding="{Binding Path=Price}" Header="Price"/>
                    <DataGridTextColumn Binding="{Binding Path=Groups.Tax}" Header="Tax"/>
                    <DataGridTextColumn Binding="{Binding Path=TotalPrice}" Header="Total price"/>
                    <DataGridTextColumn Binding="{Binding Path=Groups.Group}" Header="Group"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Expander Margin="900,120,60,60" HorizontalAlignment="Left" ExpandDirection="Right"  materialDesign:ExpanderAssist.RightHeaderPadding="0,35,0,5">
            <Expander.Header>
                <TextBlock Text="Show product preview" FontFamily="Arial" Foreground="Black" TextAlignment="Justify" FontSize="18" RenderTransformOrigin=".5,.5">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical" Margin="8,24,16,24">
                <TextBlock Text="Preview:" FontFamily="Arial" Foreground="Black" TextAlignment="Justify" FontSize="18"/>
                <Image Source="{Binding SelectedItem.ImageLink}" />
            </StackPanel>
        </Expander>
        <Expander Margin="900,360,60,60" HorizontalAlignment="Left" ExpandDirection="Right"  materialDesign:ExpanderAssist.RightHeaderPadding="0,35,0,5">
            <Expander.Header>
                <TextBlock Text="Add new product" FontFamily="Arial" Foreground="Black" TextAlignment="Justify" FontSize="18" RenderTransformOrigin=".5,.5">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical" Margin="8,24,16,24">
                <TextBlock Text="Product:" FontFamily="Arial" Foreground="Black" TextAlignment="Justify" FontSize="18"/>
                <StackPanel Width="300" Background="{DynamicResource MaterialDesignPaper}">
                    <TextBox Text="{Binding AddNewProduct.Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DialogTextBox}" materialDesign:HintAssist.Hint="Name"/>
                    <TextBox Text="{Binding AddNewProduct.Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DialogTextBox}" materialDesign:HintAssist.Hint="Description"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding AddProductImageCommand}">
                        Find Image
                    </Button>
                    <DatePicker Text="{Binding AddNewProduct.ExpirationDateDays, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" materialDesign:HintAssist.Hint="Expiration"/>
                    <TextBox Text="{Binding AddNewProduct.Price, UpdateSourceTrigger=Default}" Style="{StaticResource DialogTextBox}" materialDesign:HintAssist.Hint="Price"/>
                    <ComboBox Height="35" materialDesign:HintAssist.Hint="Group"  ItemsSource="{Binding GroupsModels}"
                    SelectedValue="{Binding AddNewProduct.Groups}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Group}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding AddCommand}">
                            ADD
                        </Button>
                        <Button Command="{Binding DeleteCommand}" ToolTip="Select product in the grid to delete" Style="{DynamicResource MaterialDesignFlatButton}">
                            DELETE
                        </Button>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Expander>
        <materialDesign:Snackbar MessageQueue="{Binding Notification.NotificationMessageQueue, UpdateSourceTrigger=PropertyChanged}" Margin="0,80,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsActive="{Binding Notification.IsActive, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</UserControl>
